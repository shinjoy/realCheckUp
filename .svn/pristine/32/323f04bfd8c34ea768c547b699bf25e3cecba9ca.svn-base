package kr.nomad.mars.dao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import kr.nomad.mars.dto.UserChol;


public class UserCholDao {
	
	private JdbcTemplate jdbcTemplate;
	public void setDataSource(DataSource dataSource) {
	    this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	private RowMapper usercholMapper = new RowMapper() {
		public UserChol mapRow(ResultSet rs, int rowNum) throws SQLException {
			UserChol userchol = new UserChol();
			userchol.setSeq(rs.getInt("seq"));
			userchol.setUserId(rs.getString("user_id"));
			userchol.setLdl(rs.getInt("ldl"));
			userchol.setTg(rs.getInt("tg"));
			userchol.setStatus(rs.getInt("status"));
			userchol.setRegDate(rs.getString("reg_date"));
			return userchol;
		}
	};

	public void addUserChol(final UserChol userchol) {
		String query = "" +
				"INSERT INTO T_NF_USER_CHOLESTEROL " +
				"	( user_id, ldl, tg, status , reg_date) " +
				"VALUES " +
				"	( ?, ?, ?, ?, ?) ";
		this.jdbcTemplate.update(query, new Object[] {
		
			userchol.getUserId(),
			userchol.getLdl(),
			userchol.getTg(),
			userchol.getStatus(),
			userchol.getRegDate()
		
		});
	}

	public void deleteUserChol(int seq) {
		String query = "DELETE FROM T_NF_USER_CHOLESTEROL WHERE seq = ? ";
		this.jdbcTemplate.update(query, new Object[] { seq });
	}
	public void deleteUserCholbyId(String userId) {
		String query = "DELETE FROM T_NF_USER_CHOLESTEROL WHERE user_id = ? ";
		this.jdbcTemplate.update(query, new Object[] { userId });
	}

	public void updateUserChol(UserChol userchol) { 
		String query = "" + 
				"UPDATE T_NF_USER_CHOLESTEROL SET " +
				"	user_id = ?, " +
				"	ldl = ?, " +
				"	tg = ?, " +
				"	reg_date = ?, " +
				"	status  = ? " +
			
				"WHERE seq = ? ";
		this.jdbcTemplate.update(query, new Object[] {
			
			userchol.getUserId(),
			userchol.getLdl(),
			userchol.getTg(),
			userchol.getRegDate(),
			userchol.getStatus(),
			userchol.getSeq()
		});
	}

	public UserChol getUserChol(int seq) {
		String query = "" + 
				"SELECT * " +
				"FROM T_NF_USER_CHOLESTEROL " +
				"WHERE seq = ? ";
		return (UserChol)this.jdbcTemplate.queryForObject(query, new Object[] { seq }, this.usercholMapper);
	}
	
	public UserChol getUserCholLimit1(String userId) {
		String query = "" + 
				"SELECT * " +
				"FROM T_NF_USER_CHOLESTEROL " +
				"WHERE user_id = ? order by seq desc limit 1 ";
		return (UserChol)this.jdbcTemplate.queryForObject(query, new Object[] { userId }, this.usercholMapper);
	}

	public List<UserChol> getUserCholList(String userId,int page, int itemCountPerPage) {
		String query = ""
	            + " SELECT * FROM ( "
	            + " 	SELECT "
	            + "			* "
	            + " 	FROM T_NF_USER_CHOLESTEROL "
	            + " 	where user_id = ? " 
	    		+ " 	ORDER BY reg_date DESC "
	    		+ " ) AS a LIMIT " + (page - 1) * itemCountPerPage + "," + itemCountPerPage;
		return (List<UserChol>)this.jdbcTemplate.query(query, new Object[] { userId },this.usercholMapper);
	}
	public int getUserCholCount(String userId) {
		String query = "" + 
				"SELECT count(*) " +
				"FROM T_NF_USER_CHOLESTEROL " +
				"WHERE user_id = ? ";
		return this.jdbcTemplate.queryForInt(query, new Object[] { userId });
	}

}
